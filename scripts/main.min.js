// Load the navigation menu from nav.html
// Load the navigation menu from nav.html
fetch('nav.html')
    .then(response => response.text())
    .then(data => {
        document.getElementById('nav-placeholder').innerHTML = data;

        // Add event listener for toggle button after loading navigation
        const menuToggle = document.getElementById('menu-toggle');
        const sideNav = document.getElementById('side-nav');

        if (menuToggle && sideNav) {
            menuToggle.addEventListener('click', () => {
                sideNav.classList.toggle('visible');
            });
        }

        // Highlight the active link after loading navigation
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            if (link.pathname === currentPath) {
                link.classList.add('active');
            }
        });
    })
    .catch(error => {
        console.error('Error loading navigation:', error);
    });

// Close side navigation when clicking outside of it
document.addEventListener('click', (event) => {
    const sideNav = document.getElementById('side-nav');
    const menuToggle = document.getElementById('menu-toggle');

    if (sideNav && sideNav.classList.contains('visible')) {
        if (!sideNav.contains(event.target) && event.target !== menuToggle) {
            sideNav.classList.remove('visible');
        }
    }
});


// Load the footer from footer.html
fetch('footer.html')
    .then(response => response.text())
    .then(data => {
        document.getElementById('footer-placeholder').innerHTML = data;
    })
    .catch(error => {
        console.error('Error loading footer:', error);
    });


// Fullscreen overlay logic
function openFullscreenOverlay(imageSrc) {
    const overlay = document.getElementById('fullscreen-overlay');
    const fullscreenImage = document.getElementById('fullscreen-image');
    fullscreenImage.src = imageSrc;
    overlay.style.display = 'flex';

    // Ensures image is resized within screen bounds
    fullscreenImage.style.maxWidth = '80%';
    fullscreenImage.style.maxHeight = '80%';
}

document.getElementById('fullscreen-overlay').addEventListener('click', function() {
    this.style.display = 'none';
});


// Slider logic
      let currentSlide = 0;
      const slides = document.querySelectorAll('.slider-container img');
      const sliderContainer = document.getElementById('slider-container');

      document.getElementById('next-slide').addEventListener('click', () => {
          currentSlide = (currentSlide + 1) % slides.length;
          sliderContainer.style.transform = `translateX(-${currentSlide * 100}%)`;
      });

      document.getElementById('prev-slide').addEventListener('click', () => {
          currentSlide = (currentSlide - 1 + slides.length) % slides.length;
          sliderContainer.style.transform = `translateX(-${currentSlide * 100}%)`;
      });
